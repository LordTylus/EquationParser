name: CI

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper
        run: ./gradlew build publishToMavenLocal

      - name: Sign artifacts
        run: |
          gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" --import <(echo "$GPG_PRIVATE_KEY")
          for file in build/libs/*.jar build/libs/*-sources.jar build/libs/*-javadoc.jar build/publications/mavenJava/pom-default.xml; do
            gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" -ab "$file"
          done
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Deploy to Sonatype SNAPSHOT
        run: |
          VERSION=$(./gradlew -q properties | grep "^version:" | awk '{ print $2 }')
          mvn deploy:deploy-file \
            -DpomFile=build/publications/mavenJava/pom-default.xml \
            -Dfile=build/libs/equation-parser-${VERSION}.jar \
            -Dsources=build/libs/equation-parser-${VERSION}-sources.jar \
            -Djavadoc=build/libs/equation-parser-${VERSION}-javadoc.jar \
            -Dfiles=build/libs/equation-parser-${VERSION}.jar.asc,build/libs/equation-parser-${VERSION}-sources.jar.asc,build/libs/equation-parser-${VERSION}-javadoc.jar.asc,build/publications/mavenJava/pom-default.xml.asc \
            -Dclassifiers=jar.asc,sources.asc,javadoc.asc,pom.asc \
            -Dtypes=asc,asc,asc,asc \
            -DrepositoryId=ossrh \
            -Durl=https://central.sonatype.com/repository/maven-snapshots \
            -DgroupId=io.github.lordtylus.equation \
            -DartifactId=equation-parser \
            -Dversion=${VERSION}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

  jacoco:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper
        run: ./gradlew test

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv

      - name: Commit and push the badge (if it changed)
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'commit badge'
          add: '*.svg'

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            build/jacoco/
            build/reports/jacoco/

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
